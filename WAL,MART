((twod,k)=>{
    if (window[k])
        return;
    window[k] = true;
    (()=>{
        "use strict";
        function e(e, t) {
            let n, o = !0;
            return "boolean" == typeof e ? (o = e,
            n = t) : n = e,
            Sn((e=>{
                const t = sn(Mn.document);
                "interactive" == t || "complete" == t ? (n && n(),
                e()) : Ln.addEventListener("DOMContentLoaded", (()=>{
                    n && n(),
                    e()
                }
                ), St({
                    capture: o,
                    once: !0
                }))
            }
            ))
        }
        const t = e=>{
            const t = Object.call
              , n = t.bind(t)
              , o = Object.assign
              , s = Object.getOwnPropertyDescriptor
              , r = e=>o({
                __proto__: null
            }, e);
            return r({
                sourceWindow: e,
                cSO: r,
                F_c: n,
                F_a: Object.apply,
                F_b: Object.bind,
                F_tS: Function.toString,
                A_fE: [].forEach,
                A_so: [].some,
                A_sh: [].shift,
                A_j: [].join,
                A_iO: [].indexOf,
                A_iA: Array.isArray,
                O_a: o,
                O_k: Object.keys,
                O_v: Object.values,
                O_dP: Object.defineProperties,
                O_dPy: Object.defineProperty,
                O_hOP: Object.hasOwnProperty,
                O_gOPN: Object.getOwnPropertyNames,
                O_gOPD: s,
                O_gOPDs: Object.getOwnPropertyDescriptors,
                O_gPO: Object.getPrototypeOf,
                O_tS: {}.toString,
                J_p: JSON.parse,
                J_s: JSON.stringify,
                M_f: Math.floor,
                M_r: Math.random,
                M_m: Math.max,
                M_mi: Math.min,
                M_i: MutationEvent.prototype.initMutationEvent,
                M_pA: MutationEvent.prototype.ADDITION,
                M_pAT: MutationEvent.AT_TARGET,
                N_tS: (0).toString,
                N_MSI: Number.MAX_SAFE_INTEGER,
                P_t: Promise.prototype.then,
                P_c: Promise.prototype.catch,
                R_rABS: FileReader.prototype.readAsBinaryString,
                R_rAT: FileReader.prototype.readAsText,
                R_r: s(FileReader.prototype, "result").get,
                R_enq: e.ReadableStreamDefaultController ? e.ReadableStreamDefaultController.prototype.enqueue : null,
                R_cl: e.ReadableStreamDefaultController ? e.ReadableStreamDefaultController.prototype.close : null,
                S_fCC: String.fromCharCode,
                S_sl: "".slice,
                S_su: "".substr,
                S_sp_nr: "".split,
                S_iO: "".indexOf,
                S_tr: "".trim,
                S_r_nr: "".replace,
                S_rA_nr: "".replaceAll,
                S_cCA: "".charCodeAt,
                S_tLC: "".toLowerCase,
                S_tUC: "".toUpperCase,
                Y_tST: Symbol.toStringTag,
                USP_tS: URLSearchParams.prototype.toString,
                D_pFS: DOMParser.prototype.parseFromString,
                U_cOU: URL.createObjectURL,
                U_rOU: URL.revokeObjectURL,
                X_o: XMLHttpRequest.prototype.open,
                X_pSD: XMLHttpRequest.prototype.DONE,
                X_pSH: XMLHttpRequest.prototype.HEADERS_RECEIVED,
                X_pSL: XMLHttpRequest.prototype.LOADING,
                X_pSO: XMLHttpRequest.prototype.OPENED,
                X_pSU: XMLHttpRequest.prototype.UNSENT,
                X_s: XMLHttpRequest.prototype.send,
                D_n: Date.now,
                I_tS: e=>"" + e,
                E_r: Element.prototype.remove,
                E_s: Element.prototype.setAttribute,
                E_rA: Element.prototype.removeAttribute,
                D_cS: s(Document.prototype, "currentScript").get,
                D_gRS: s(Document.prototype, "readyState").get,
                D_cE: Document.prototype.createElementNS,
                D_gEBT: Document.prototype.getElementsByTagName,
                M_aN: s(MutationEvent.prototype, "attrName").get,
                M_rN: s(MutationEvent.prototype, "relatedNode").get,
                C_d: s(CustomEvent.prototype, "detail").get,
                W_aEL: addEventListener,
                W_rEL: removeEventListener,
                parseInt,
                parseFloat,
                CustomEvent,
                CompositionEvent,
                KeyboardEvent,
                MouseEvent,
                MutationEvent,
                MutationObserver,
                console: Object.assign({}, console),
                Error,
                Uint8Array,
                Blob,
                ReadableStream,
                Number,
                String,
                Proxy,
                Window,
                FileReader,
                DOMParser,
                XMLHttpRequest,
                Function,
                RegExp,
                Promise,
                encodeURIComponent,
                decodeURIComponent,
                encodeURI,
                decodeURI,
                escape,
                unescape,
                atob,
                btoa,
                setTimeout,
                clearTimeout,
                setInterval,
                clearInterval,
                postMessage,
                dispatchEvent,
                alert,
                prompt,
                confirm,
                close,
                getElementById: e.Document.prototype.getElementById,
                createEvent: e.Document.prototype.createEvent,
                createElement: e.Document.prototype.createElement
            })
        }
          , n = "vault"in twod;
        if (n && void 0 === twod.vault)
            throw "Invalid vault";
        const o = twod.vault = twod.vault || t(twod.unsafeWindow)
          , {cSO: s, F_c: r, F_a: i, F_b: a, F_tS: c, A_fE: d, A_so: l, A_sh: u, A_j: p, A_iO: m, A_iA: g, O_a: f, O_k: _, O_v: v, O_dP: h, O_dPy: w, O_hOP: b, O_gOPN: M, O_gOPD: y, O_gOPDs: E, O_gPO: L, O_tS: S, J_p: O, J_s: I, M_f: x, M_r: R, M_m: D, M_mi: j, M_i: P, M_pA: C, M_pAT: $, N_tS: A, N_MSI: T, P_t: U, P_c: k, R_rABS: N, R_rAT: B, R_r: F, R_enq: X, R_cl: q, S_fCC: W, S_sl: H, S_su: J, S_iO: G, S_sp_nr: K, S_tr: z, S_rA_nr: V, S_cCA: Y, S_tLC: Z, S_tUC: Q, Y_tST: ee, D_pFS: te, D_cS: ne, D_gRS: oe, D_cE: se, D_gEBT: re, E_r: ie, E_s: ae, E_rA: ce, M_aN: de, M_rN: le, C_d: ue, U_cOU: pe, U_rOU: me, USP_tS: ge, X_o: fe, X_s: _e, X_pSD: ve, X_pSH: he, X_pSL: we, X_pSO: be, X_pSU: Me, D_n: ye, I_tS: Ee, W_aEL: Le, W_rEL: Se, parseInt: Oe, parseFloat: Ie, console: xe, encodeURIComponent: Re, decodeURIComponent: De, encodeURI: je, decodeURI: Pe, escape: Ce, unescape: $e, atob: Ae, btoa: Te, postMessage: Ue, dispatchEvent: ke, alert: Ne, prompt: Be, confirm: Fe, close: Xe, getElementById: qe, createEvent: We, createElement: He, CustomEvent: Je, CompositionEvent: Ge, KeyboardEvent: Ke, MouseEvent: ze, MutationEvent: Ve, MutationObserver: Ye, Uint8Array: Ze, FileReader: Qe, DOMParser: et, XMLHttpRequest: tt, Function: nt, RegExp: ot, Promise: st, Blob: rt, ReadableStream: it, Number: at, String: ct, Proxy: dt, Window: lt} = o
          , ut = r
          , pt = i
          , mt = _
          , gt = v
          , ft = f
          , _t = w
          , vt = M
          , ht = y
          , wt = L
          , bt = g
          , Mt = R
          , yt = D
          , Et = j
          , Lt = (e,t,n)=>ut(pt, e, t, n)
          , St = s
          , Ot = (e,t,n)=>(_t(e, t, St({
            value: n,
            configurable: !0,
            enumerable: !0,
            writable: !0
        })),
        e)
          , It = (e,t)=>{
            const n = ht(e, t);
            return n ? St(n).value : void 0
        }
          , xt = (e,t)=>{
            const n = (e,t,o)=>{
                const s = ht(e, t)
                  , r = s ? St(s) : void 0;
                let i;
                return r ? r.enumerable ? r.value : void 0 : --o >= 0 && (i = wt(e)) ? n(i, t, o) : void 0
            }
            ;
            return n(e, t, 5)
        }
          , Rt = e=>{
            const t = (t,...n)=>Lt(e, t, n);
            return Ot(t, "wrappedJSObject", e),
            t
        }
          , Dt = ()=>e=>Rt(e)
          , jt = Rt(a)
          , Pt = O
          , Ct = e=>{
            const t = (e,n)=>{
                let o;
                if (null === e)
                    o = "null";
                else {
                    const i = typeof e;
                    if ("object" === i) {
                        if (n) {
                            if (-1 != Nt(n, e))
                                throw "Converting circular structure to JSON";
                            Ot(n, n.length, e)
                        } else
                            n = [e];
                        if (bt(e)) {
                            let i = "";
                            for (let o = 0; o < e.length; o++) {
                                let a;
                                a = Ft(e, o) ? Ft(s = e, r = o) ? s[r] : void 0 : xt(e, o);
                                const c = t(a, n);
                                i += `${o ? "," : ""}${void 0 === c ? "null" : c}`
                            }
                            o = `[${i}]`
                        } else {
                            let s = "";
                            Bt(mt(e), (o=>{
                                const r = t(e[o], n);
                                void 0 !== r && (s += `${s ? "," : ""}${I(o)}: ${r}`)
                            }
                            )),
                            o = `{${s}}`
                        }
                        n.length -= 1
                    } else {
                        if ("bigint" === i)
                            throw "Do not know how to serialize a BigInt";
                        o = I(e)
                    }
                }
                var s, r;
                return o
            }
            ;
            return t(e)
        }
          , $t = Dt()(l)
          , At = Dt()(u)
          , Tt = (e,t,n)=>{
            const o = e.length;
            let s = t || 0;
            if (s >= o)
                return [];
            s < 0 && (s = yt(0, o + s));
            let r = void 0 === n ? o : n;
            r < 0 && (r = yt(0, o + r)),
            r > o && (r = o);
            const i = St({});
            for (let t = s; t < r; t++)
                i[t] = It(e, t);
            return gt(i)
        }
          , Ut = Dt()(p)
          , kt = (e,t)=>{
            let n = e.length || 0;
            return Ot(e, n, t),
            n++,
            e.length = n
        }
          , Nt = Dt()(m)
          , Bt = Dt()(d)
          , Ft = Dt()(b)
          , Xt = Dt()(K)
          , qt = Dt()(H)
          , Wt = Rt(S)
          , Ht = wt({})
          , Jt = e=>{
            const t = St(e)
              , n = vt(t);
            for (let e = 0; e < n.length; e++) {
                const o = n[e]
                  , s = t[o];
                null !== s && "object" == typeof s && wt(s) === Ht && (t[o] = Jt(s))
            }
            return t
        }
          , Gt = e=>{
            const t = Xt(Wt(e), " ");
            return qt(Ut(Tt(t, 1), " "), 0, -1)
        }
          , Kt = Dt()(c)
          , zt = Dt()(P)
          , Vt = C
          , Yt = Dt()(A)
          , Zt = Dt()(U)
          , Qt = (Dt()(k),
        Dt()(N),
        Dt()(B),
        Dt()(F),
        X && Dt()(X),
        q && Dt()(q),
        W)
          , en = Dt()(J)
          , tn = Dt()(G)
          , nn = (Dt()(z),
        Dt()(V || function(e, t) {
            return Ut(Xt(this, e), t)
        }
        ),
        Dt()(Y))
          , on = Dt()(Z)
          , sn = (Dt()(Q),
        Rt(te),
        Rt(ne),
        Rt(oe))
          , rn = Rt(se)
          , an = Rt(re)
          , cn = (Rt(ie),
        Rt(ae),
        Rt(ce),
        Rt(de))
          , dn = Rt(le)
          , ln = Rt(ue)
          , un = me
          , pn = (Rt(ge),
        Dt()(fe),
        Dt()(_e),
        ye)
          , mn = Je
          , gn = Ye
          , fn = rt
          , _n = function(e, t) {
            return It(e, t)
        }
          , vn = St({
            addEventListener: !1,
            Array: !0,
            Blob: !0,
            close: !1,
            CustomEvent: !0,
            Date: !0,
            DOMParser: !0,
            Error: !0,
            Event: !0,
            FileReader: !0,
            KeyboardEvent: !0,
            location: !0,
            Math: !0,
            MouseEvent: !0,
            MutationEvent: !0,
            Number: !0,
            Object: !0,
            Promise: !0,
            ReadableStream: !0,
            removeEventListener: !1,
            Uint8Array: !0,
            XMLHttpRequest: !0
        })
          , hn = (()=>{
            const e = St({
                getElementById: qe,
                createEvent: We,
                createElement: He,
                dispatchEvent: ke,
                addEventListener,
                removeEventListener
            })
              , t = St({});
            return Bt(mt(e), (n=>{
                try {
                    const o = e[n];
                    t[n] = function(...e) {
                        return Lt(o, Mn.document, e)
                    }
                } catch (e) {
                    t[n] = ((e,t)=>{
                        if (En.error(`Tampermonkey sandbox preparation ${t ? "(" + t + ") " : ""}failed. This usually is caused by a third-party extension.`, e),
                        t)
                            return ()=>{}
                    }
                    )(e, `document.${n}`)
                }
            }
            )),
            t
        }
        )()
          , wn = St({
            top: !0,
            location: !0
        })
          , bn = twod
          , {unsafeWindow: Mn, unsafeThis: yn} = bn;
        twod.bridges = twod.bridges || St({});
        const En = twod.console = twod.console || St({})
          , Ln = St({
            addEventListener: jt(Le, Mn),
            removeEventListener: jt(Se, Mn)
        });
        Bt(mt(wn), (async e=>{
            if (!Ln[e])
                try {
                    const t = Mn[e];
                    if (null == t)
                        return;
                    Ln[e] = t
                } catch (e) {}
        }
        )),
        Bt(mt(vn), (async e=>{
            if (!Ln[e])
                try {
                    let t = It(Mn, e);
                    if (void 0 === t && (yn === Mn || void 0 === (t = It(yn, e))))
                        return;
                    const n = vn[e];
                    Ln[e] = !1 === n && "function" == typeof t ? jt(t, yn) : t
                } catch (e) {}
        }
        ));
        const Sn = e=>{
            let t, n = [], o = !1;
            e((e=>{
                if (!o) {
                    if (n.length) {
                        const t = n;
                        n = [],
                        Bt(t, (t=>t(e)))
                    } else
                        t = e;
                    o = !0
                }
            }
            ));
            const s = St({
                then: e=>(o ? e(t) : kt(n, e),
                s)
            });
            return s
        }
          , On = ()=>Yt(pn() + 19831206 * Mt() + 1, 36)
          , In = (()=>{
            const {console: e, bridges: t} = twod
              , n = St({});
            let o;
            const s = (t,o,s,i)=>{
                let a, c = [], d = [], l = [], u = [];
                const p = ()=>{
                    d = [],
                    l = [],
                    u = [],
                    _(),
                    M = null,
                    delete n[o]
                }
                  , m = e=>{
                    t.send("port.message", St({
                        response_id: o,
                        value: e
                    }))
                }
                  , g = e=>{
                    i && "messageId"in e && kt(c, e),
                    m(e)
                }
                  , f = (e,t=!0)=>{
                    a = e,
                    t && m(e)
                }
                  , _ = ()=>{
                    a = void 0
                }
                  , v = St({
                    addListener: e=>{
                        kt(d, e)
                    }
                })
                  , h = St({
                    addListener: e=>{
                        kt(l, e)
                    }
                })
                  , w = St({
                    addListener: e=>{
                        kt(u, e)
                    }
                })
                  , b = ()=>{
                    p(),
                    t.send("port.message", St({
                        response_id: o,
                        disconnect: !0
                    }))
                }
                ;
                let M = St(s ? {
                    postMessage: g,
                    connectMessage: f,
                    stopReconnecting: _,
                    onMessage: v,
                    onDisconnect: h,
                    onReconnect: w,
                    disconnect: b
                } : {
                    postMessage: g,
                    onMessage: v,
                    onDisconnect: h,
                    disconnect: b
                });
                return n[o] = St({
                    message: t=>{
                        if (i && (e=>"ack"in e)(t)) {
                            const {messageId: n} = t;
                            (t=>{
                                if (!t)
                                    return void e.warn("PortMessaging: no message id in ack message");
                                if (a && a.messageId === t)
                                    return;
                                let n = -1;
                                $t(c, ((e,o)=>e.messageId === t && (n = o,
                                !0))),
                                -1 !== n ? (Bt(Tt(c, 0, n), (t=>e.warn(`PortMessaging: message ${t.messageId} was not ack'ed!`, t))),
                                c = Tt(c, n + 1)) : e.warn(`PortMessaging: no one is waiting for ${t}`)
                            }
                            )(n)
                        }
                        d && Bt(d, (e=>e(t)))
                    }
                    ,
                    disconnect: ()=>{
                        if (a && s)
                            return r(s, o),
                            f(a),
                            i && Bt(c, (e=>m(e))),
                            void (u && Bt(u, (e=>e())));
                        l && Bt(l, (e=>e())),
                        p()
                    }
                }),
                M
            }
              , r = (e,n)=>{
                t.first.send("port.message", St({
                    response_id: n,
                    connect: !0,
                    destination: e
                }))
            }
            ;
            return St({
                message: (t,r)=>{
                    let i;
                    if (t.connect) {
                        if (!t.destination || !t.response_id)
                            throw "invalid message";
                        o && o(t.destination, s(r, t.response_id))
                    } else {
                        if (!t.response_id)
                            throw "invalid message";
                        if (!(i = n[t.response_id]))
                            return void e.warn("ports: unknown id", t.response_id, t);
                        t.disconnect ? i.disconnect() : i.message(t.value)
                    }
                }
                ,
                connect: function(e, n, o) {
                    const i = On();
                    return r(e, i),
                    s(t.first, i, n ? e : void 0, o)
                },
                onConnect: St({
                    addListener: e=>{
                        o = e
                    }
                })
            })
        }
        )()
          , {setInterval: xn, setTimeout: Rn, clearInterval: Dn, clearTimeout: jn, console: Pn, cloneInto: Cn, exportFunction: $n, createObjectIn: An} = Mn
          , Tn = Object.assign({}, Pn)
          , Un = xn.bind(Mn)
          , kn = Rn.bind(Mn)
          , Nn = Dn.bind(Mn)
          , Bn = (jn.bind(Mn),
        yn == Mn.top)
          , {arrayBuffer: Fn, blob: Xn} = Mn.Response.prototype
          , {arrayBuffer: qn} = Mn.Blob.prototype
          , {then: Wn} = Mn.Promise.prototype
          , {fetch: Hn, location: Jn, document: Gn, Response: Kn} = Mn
          , zn = Rt(Fn)
          , Vn = Rt(Xn)
          , Yn = Rt(qn)
          , Zn = Cn
          , Qn = St({
            encode: e=>$e(Re(e)),
            decode: e=>De(Ce(e))
        })
          , eo = (St({
            encode: e=>{
                let t = "";
                for (let n = 0; n < e.length; n++)
                    t += Qt(255 & nn(e, n));
                return Te(t)
            }
            ,
            decode: e=>Ae(e)
        }),
        (e,t)=>{
            const n = (e,t)=>e << t | e >>> 32 - t
              , o = (e,t)=>{
                const n = 2147483648 & e
                  , o = 2147483648 & t
                  , s = 1073741824 & e
                  , r = 1073741824 & t
                  , i = (1073741823 & e) + (1073741823 & t);
                return s & r ? 2147483648 ^ i ^ n ^ o : s | r ? 1073741824 & i ? 3221225472 ^ i ^ n ^ o : 1073741824 ^ i ^ n ^ o : i ^ n ^ o
            }
              , s = (e,t,s,r,i,a,c)=>(e = o(e, o(o(((e,t,n)=>e & t | ~e & n)(t, s, r), i), c)),
            o(n(e, a), t))
              , r = (e,t,s,r,i,a,c)=>(e = o(e, o(o(((e,t,n)=>e & n | t & ~n)(t, s, r), i), c)),
            o(n(e, a), t))
              , i = (e,t,s,r,i,a,c)=>(e = o(e, o(o(((e,t,n)=>e ^ t ^ n)(t, s, r), i), c)),
            o(n(e, a), t))
              , a = (e,t,s,r,i,a,c)=>(e = o(e, o(o(((e,t,n)=>t ^ (e | ~n))(t, s, r), i), c)),
            o(n(e, a), t))
              , c = e=>{
                let t, n, o = "", s = "";
                for (n = 0; n <= 3; n++)
                    t = e >>> 8 * n & 255,
                    s = "0" + Yt(t, 16),
                    o += en(s, s.length - 2, 2);
                return o
            }
            ;
            let d, l, u, p, m, g, f, _;
            t && "utf-8" == on(t) && (e = Qn.encode(e));
            const v = (e=>{
                let t;
                const n = e.length
                  , o = n + 8
                  , s = 16 * ((o - o % 64) / 64 + 1)
                  , r = [];
                for (let e = 0; e <= s - 1; e++)
                    kt(r, 0);
                let i = 0
                  , a = 0;
                for (; a < n; )
                    t = (a - a % 4) / 4,
                    i = a % 4 * 8,
                    r[t] = r[t] | nn(e, a) << i,
                    a++;
                return t = (a - a % 4) / 4,
                i = a % 4 * 8,
                r[t] = r[t] | 128 << i,
                r[s - 2] = n << 3,
                r[s - 1] = n >>> 29,
                r
            }
            )(e);
            m = 1732584193,
            g = 4023233417,
            f = 2562383102,
            _ = 271733878;
            for (let e = 0; e < v.length; e += 16)
                d = m,
                l = g,
                u = f,
                p = _,
                m = s(m, g, f, _, v[e + 0], 7, 3614090360),
                _ = s(_, m, g, f, v[e + 1], 12, 3905402710),
                f = s(f, _, m, g, v[e + 2], 17, 606105819),
                g = s(g, f, _, m, v[e + 3], 22, 3250441966),
                m = s(m, g, f, _, v[e + 4], 7, 4118548399),
                _ = s(_, m, g, f, v[e + 5], 12, 1200080426),
                f = s(f, _, m, g, v[e + 6], 17, 2821735955),
                g = s(g, f, _, m, v[e + 7], 22, 4249261313),
                m = s(m, g, f, _, v[e + 8], 7, 1770035416),
                _ = s(_, m, g, f, v[e + 9], 12, 2336552879),
                f = s(f, _, m, g, v[e + 10], 17, 4294925233),
                g = s(g, f, _, m, v[e + 11], 22, 2304563134),
                m = s(m, g, f, _, v[e + 12], 7, 1804603682),
                _ = s(_, m, g, f, v[e + 13], 12, 4254626195),
                f = s(f, _, m, g, v[e + 14], 17, 2792965006),
                g = s(g, f, _, m, v[e + 15], 22, 1236535329),
                m = r(m, g, f, _, v[e + 1], 5, 4129170786),
                _ = r(_, m, g, f, v[e + 6], 9, 3225465664),
                f = r(f, _, m, g, v[e + 11], 14, 643717713),
                g = r(g, f, _, m, v[e + 0], 20, 3921069994),
                m = r(m, g, f, _, v[e + 5], 5, 3593408605),
                _ = r(_, m, g, f, v[e + 10], 9, 38016083),
                f = r(f, _, m, g, v[e + 15], 14, 3634488961),
                g = r(g, f, _, m, v[e + 4], 20, 3889429448),
                m = r(m, g, f, _, v[e + 9], 5, 568446438),
                _ = r(_, m, g, f, v[e + 14], 9, 3275163606),
                f = r(f, _, m, g, v[e + 3], 14, 4107603335),
                g = r(g, f, _, m, v[e + 8], 20, 1163531501),
                m = r(m, g, f, _, v[e + 13], 5, 2850285829),
                _ = r(_, m, g, f, v[e + 2], 9, 4243563512),
                f = r(f, _, m, g, v[e + 7], 14, 1735328473),
                g = r(g, f, _, m, v[e + 12], 20, 2368359562),
                m = i(m, g, f, _, v[e + 5], 4, 4294588738),
                _ = i(_, m, g, f, v[e + 8], 11, 2272392833),
                f = i(f, _, m, g, v[e + 11], 16, 1839030562),
                g = i(g, f, _, m, v[e + 14], 23, 4259657740),
                m = i(m, g, f, _, v[e + 1], 4, 2763975236),
                _ = i(_, m, g, f, v[e + 4], 11, 1272893353),
                f = i(f, _, m, g, v[e + 7], 16, 4139469664),
                g = i(g, f, _, m, v[e + 10], 23, 3200236656),
                m = i(m, g, f, _, v[e + 13], 4, 681279174),
                _ = i(_, m, g, f, v[e + 0], 11, 3936430074),
                f = i(f, _, m, g, v[e + 3], 16, 3572445317),
                g = i(g, f, _, m, v[e + 6], 23, 76029189),
                m = i(m, g, f, _, v[e + 9], 4, 3654602809),
                _ = i(_, m, g, f, v[e + 12], 11, 3873151461),
                f = i(f, _, m, g, v[e + 15], 16, 530742520),
                g = i(g, f, _, m, v[e + 2], 23, 3299628645),
                m = a(m, g, f, _, v[e + 0], 6, 4096336452),
                _ = a(_, m, g, f, v[e + 7], 10, 1126891415),
                f = a(f, _, m, g, v[e + 14], 15, 2878612391),
                g = a(g, f, _, m, v[e + 5], 21, 4237533241),
                m = a(m, g, f, _, v[e + 12], 6, 1700485571),
                _ = a(_, m, g, f, v[e + 3], 10, 2399980690),
                f = a(f, _, m, g, v[e + 10], 15, 4293915773),
                g = a(g, f, _, m, v[e + 1], 21, 2240044497),
                m = a(m, g, f, _, v[e + 8], 6, 1873313359),
                _ = a(_, m, g, f, v[e + 15], 10, 4264355552),
                f = a(f, _, m, g, v[e + 6], 15, 2734768916),
                g = a(g, f, _, m, v[e + 13], 21, 1309151649),
                m = a(m, g, f, _, v[e + 4], 6, 4149444226),
                _ = a(_, m, g, f, v[e + 11], 10, 3174756917),
                f = a(f, _, m, g, v[e + 2], 15, 718787259),
                g = a(g, f, _, m, v[e + 9], 21, 3951481745),
                m = o(m, d),
                g = o(g, l),
                f = o(f, u),
                _ = o(_, p);
            const h = c(m) + c(g) + c(f) + c(_);
            return on(h)
        }
        )
          , to = (e,t)=>{
            const n = rn(Mn.document, "http://www.w3.org/1999/xhtml", e);
            return "string" == typeof t ? n.append(t) : t && Bt(mt(t), (e=>{
                "textContent" == e ? n.textContent = t[e] : n.setAttribute(e, t[e])
            }
            )),
            n
        }
          , no = t=>{
            const n = Mn.document;
            if (n.body || "text/xml" == n.contentType)
                t();
            else {
                let n = !1;
                const o = ()=>{
                    n = !0,
                    no(t)
                }
                  , s = St({
                    capture: !0,
                    once: !0
                });
                Ln.addEventListener("DOMNodeInserted", o, s),
                e((()=>{
                    n || (Ln.removeEventListener("DOMNodeInserted", o, s),
                    t())
                }
                ))
            }
        }
          , oo = t=>{
            e((()=>{
                kn((()=>t()), 1)
            }
            ))
        }
        ;
        let so, ro;
        const io = Jn.host
          , ao = e=>{
            "n:" == en(e, 0, 2) ? so = en(e, 2) : e && (ro = en(e, 2))
        }
          , co = ()=>so || (ro ? (so = eo(`${io}#${ro}`),
        so) : void 0)
          , lo = e=>void 0 !== It(e, "objUrl")
          , uo = e=>void 0 !== It(e, "blob")
          , po = e=>void 0 !== It(e, "dataUri")
          , mo = ["chrome"];
        let go, fo, _o, vo;
        _o = ()=>{
            if (void 0 !== go)
                return go;
            try {
                const e = navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);
                e && (go = parseInt(e[2]))
            } catch (e) {}
            return go
        }
        ,
        vo = ()=>{
            if (void 0 !== fo)
                return fo;
            try {
                fo = -1 != navigator.userAgent.search(/Android|Mobile/)
            } catch (e) {}
            return fo
        }
        ;
        const ho = (_o(),
        !1)
          , wo = ["chrome-extension:"]
          , bo = globalThis
          , {chrome: Mo, browser: yo} = bo
          , Eo = ([].concat(["chrome"]),
        function(e) {
            const t = ()=>"prerender" !== document.webkitVisibilityState
              , n = ()=>{
                t() && (document.removeEventListener("webkitvisibilitychange", n, !1),
                e())
            }
            ;
            t() ? e() : document.addEventListener("webkitvisibilitychange", n, !1)
        }
        )
          , Lo = (()=>{
            const e = {
                getInternalPathRegexp: function(e, t) {
                    const n = new RegExp("(\\" + ["/", ".", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\"].join("|\\") + ")","g")
                      , o = wo[0] + "//" + Lo.id + "/";
                    return new RegExp(o.replace(n, "\\$1") + "([a-zA-Z" + (e ? "\\/" : "") + "]*)" + (t || "").replace(n, "\\$1"))
                },
                getInternalPageRegexp: function() {
                    return Lo.getInternalPathRegexp(!1, ".html")
                },
                getPlatformInfo: e=>Mo.runtime.getPlatformInfo(e),
                getBrowserInfo: e=>{
                    e({
                        name: "Chrome",
                        version: `${_o()}`,
                        vendor: "unknown"
                    })
                }
            };
            return Object.defineProperty(e, "lastError", {
                get: ()=>Mo.runtime.lastError,
                enumerable: !0
            }),
            Object.defineProperty(e, "id", {
                get: ()=>Mo.runtime.id,
                enumerable: !0
            }),
            Object.defineProperty(e, "short_id", {
                get: ()=>e.id.replace(/[^0-9a-zA-Z]/g, "").substr(0, 4),
                enumerable: !0
            }),
            e
        }
        )()
          , So = (()=>{
            const e = {
                getURL: function(e) {
                    return Mo.runtime.getURL(e)
                },
                sendMessage: function(e, t) {
                    return Mo.runtime.sendMessage(e, t)
                },
                onMessage: {
                    addListener: function(e) {
                        return Mo.runtime.onMessage.addListener(e)
                    }
                },
                connect: function(e) {
                    return Mo.runtime.connect({
                        name: e
                    })
                }
            };
            let t;
            return Object.defineProperty(e, "inIncognitoContext", {
                get: ()=>(void 0 === t && (t = Mo.extension.inIncognitoContext),
                t),
                set: e=>{
                    t = e
                }
                ,
                enumerable: !0
            }),
            e
        }
        )()
          , Oo = Mo.userScripts && Mo.userScripts.onBeforeScript ? {
            supported: !0,
            onBeforeScript: {
                addListener: e=>Mo.userScripts.onBeforeScript.addListener(e)
            }
        } : {
            supported: !1
        }
          , Io = ({sendPrefix: e, listenPrefix: t, send: n, onMessage: o})=>{
            if (void 0 === n || void 0 === o)
                throw "invalid args";
            let s, r, i = 1;
            const a = St({})
              , c = St({})
              , d = e=>{
                e && (s = e)
            }
              , l = e=>{
                const t = ++i;
                return c[i] = e,
                t
            }
            ;
            o(((o,i)=>o == `${t}_${s}` ? (t=>{
                const {m: o, r: i, a: d, n: l} = t;
                if (a[o] && (Bt(a[o], (e=>e(d))),
                delete a[o]),
                "message.response" == o) {
                    if (null == i)
                        throw "Invalid Message";
                    ((e,t)=>{
                        let n;
                        e && (n = c[e]) && (n(t),
                        delete c[e])
                    }
                    )(i, d)
                } else if (r) {
                    const t = i ? t=>{
                        n(`${e}_${s}`, St({
                            m: "message.response",
                            a: t,
                            r: i
                        }))
                    }
                    : ()=>{}
                    ;
                    r(St({
                        method: o,
                        args: d,
                        node: l
                    }), t)
                }
            }
            )(i) : null));
            const u = St({
                init: async e=>{
                    s ? d() : d(e)
                }
                ,
                refresh: ()=>null,
                switchId: e=>{
                    s && u.cleanup(),
                    d(e)
                }
                ,
                send: (t,o,r,i)=>Sn((a=>{
                    let c, d;
                    "function" != typeof r && null !== r ? (c = r,
                    d = i) : d = r,
                    n(`${e}_${s}`, St({
                        m: t,
                        a: o,
                        r: d ? l(d) : null,
                        n: c
                    })),
                    a()
                }
                )),
                sendToId: (t,o,s)=>{
                    n(`${e}_${t}`, St({
                        m: o,
                        a: s,
                        r: null
                    }))
                }
                ,
                once: (e,t)=>{
                    a[e] || (a[e] = []),
                    kt(a[e], t)
                }
                ,
                setMessageListener: e=>{
                    r = e
                }
                ,
                cleanup: ()=>null
            });
            return u
        }
          , xo = Oo
          , Ro = Oo.supported && !Mn.pagejs;
        let Do;
        const jo = (e,t)=>{
            try {
                Do(e),
                t && t()
            } catch (e) {
                t && t(e.message || e)
            }
        }
          , Po = "u" + On()
          , {bridges: Co} = twod;
        let $o = [];
        const Ao = e=>{
            xo.onBeforeScript.addListener((o=>{
                const s = (e,n)=>{
                    Bt(t, (t=>t(e, n)))
                }
                  , r = e=>kt(n, St({
                    listener: e,
                    clone: o.export
                }));
                _t(o.global, "pagejs", St({
                    set: o.export((t=>{
                        delete o.global.pagejs;
                        const n = o.metadata
                          , {modes: i, nonce: a} = n;
                        if (a && ao(a),
                        Bt($o, (e=>e(t, n))),
                        $o = [],
                        i.js) {
                            const n = St({
                                unsafeWindow: o.global,
                                unsafeThis: o.global.window,
                                pageWindow: void 0,
                                contextId: Po,
                                fSend: s,
                                fOnMessage: r,
                                cloneInto: void 0,
                                exportFunction: void 0
                            });
                            t(o.export(n)),
                            Co.js.sendToId(Po, "commid", St({
                                id: e
                            }))
                        }
                    }
                    )),
                    configurable: !0
                })),
                Do = o.global.eval
            }
            ));
            const t = []
              , n = []
              , o = (e,t)=>{
                Bt(n, (({listener: n, clone: o})=>n(e, o(t))))
            }
              , s = e=>kt(t, e);
            return St({
                createBridge: ()=>{
                    const t = Io(St({
                        sendPrefix: "2S",
                        listenPrefix: "2U",
                        cloneInto: Zn,
                        send: o,
                        onMessage: s
                    }));
                    return t.init(e),
                    t
                }
            })
        }
        ;
        let To;
        const {console: Uo} = twod
          , ko = e=>(e.details && e.details.url,
        Sn((async t=>{
            t(e)
        }
        )))
          , No = e=>{
            const t = So.connect(e);
            if (!Lo.lastError)
                return t
        }
          , Bo = St({
            setInterval: e=>{
                let t;
                e.onMessage.addListener((n=>{
                    "setInterval" == n.method && (t = Un(e.postMessage, n.t))
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t && Nn(t),
                    t = null
                }
                ))
            }
            ,
            registerMenuCommand: e=>{
                const t = No("registerMenuCommand");
                t ? (t.onMessage.addListener((n=>{
                    if (null !== t)
                        if ("ack"in n)
                            e.postMessage(n);
                        else {
                            const {method: t, event: o} = n;
                            e.postMessage(St({
                                method: t,
                                event: o
                            }))
                        }
                }
                )),
                t.onDisconnect.addListener((()=>{
                    e.disconnect()
                }
                )),
                e.onMessage.addListener((e=>{
                    const {messageId: n, name: o, uuid: s, accessKey: r, autoClose: i, title: a, id: c} = e
                      , d = Ut([c, To, s], "#");
                    t.postMessage(St({
                        messageId: n,
                        method: "registerMenuCommand",
                        name: o,
                        title: a,
                        uuid: s,
                        menuId: d,
                        accessKey: r,
                        autoClose: i
                    }))
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
            ,
            notification: e=>{
                const t = No("notification");
                t ? (t.onMessage.addListener((t=>{
                    e.postMessage(t)
                }
                )),
                t.onDisconnect.addListener((()=>{
                    e.disconnect()
                }
                )),
                e.onMessage.addListener((e=>{
                    t.postMessage(e)
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
            ,
            openInTab: e=>{
                const t = No("openInTab");
                t ? (t.onMessage.addListener((t=>{
                    e.postMessage(t)
                }
                )),
                t.onDisconnect.addListener((()=>{
                    e.disconnect()
                }
                )),
                e.onMessage.addListener((e=>{
                    const {messageId: n} = e;
                    if ("method"in e) {
                        const {method: o} = e;
                        if ("openInTab" == o)
                            if ("url"in e) {
                                let o = e.url;
                                const {active: s, loadInBackground: r, insert: i, incognito: a, setParent: c} = "boolean" == typeof e.options || void 0 === e.options ? St({
                                    loadInBackground: e.options
                                }) : e.options
                                  , d = void 0 === s ? void 0 !== r && !r : s
                                  , l = void 0 === i || i;
                                o && "//" == en(o, 0, 2) && (o = Jn.protocol + o),
                                t.postMessage(St({
                                    messageId: n,
                                    method: "openInTab",
                                    details: St({
                                        url: o,
                                        options: St({
                                            active: !!d,
                                            insert: !!l,
                                            incognito: !!a,
                                            setParent: !a && !!c
                                        })
                                    }),
                                    uuid: e.uuid
                                }))
                            } else
                                t.postMessage(e);
                        else
                            Uo.warn(`content: unknown method ${o}`)
                    } else
                        "name"in e ? t.postMessage(St({
                            messageId: n,
                            name: e.name
                        })) : "focus"in e ? t.postMessage(St({
                            messageId: n,
                            focus: !0
                        })) : "close"in e && t.postMessage(St({
                            messageId: n,
                            close: !0
                        }))
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
            ,
            download: e=>{
                let t;
                const n = No("download");
                n ? (n.onMessage.addListener((t=>{
                    e.postMessage(t)
                }
                )),
                n.onDisconnect.addListener((()=>{
                    e.disconnect(),
                    t = !0
                }
                )),
                e.onMessage.addListener((e=>{
                    "cancel"in e ? (t = !0,
                    n.postMessage(St({
                        cancel: !0,
                        id: To,
                        uuid: e.uuid
                    }))) : "details"in e ? ko(e).then((e=>{
                        if (t)
                            return;
                        let {url: o, ...s} = e.details;
                        n.postMessage(St({
                            messageId: e.messageId,
                            method: "download",
                            details: St({
                                ...s,
                                from: St({
                                    url: o
                                })
                            }),
                            id: To,
                            uuid: e.uuid,
                            location: Jn.href
                        }))
                    }
                    )) : n.postMessage(St({
                        messageId: e.messageId,
                        method: "download",
                        uuid: e.uuid,
                        id: e.id
                    }))
                }
                )),
                e.onDisconnect.addListener((()=>{
                    n.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
            ,
            webRequest: e=>{
                const t = No("webRequest");
                t ? (t.onMessage.addListener((t=>{
                    e.postMessage(t)
                }
                )),
                t.onDisconnect.addListener((()=>{
                    e.disconnect()
                }
                )),
                e.onMessage.addListener((e=>{
                    const {messageId: n, rules: o, uuid: s} = e;
                    t.postMessage(St({
                        messageId: n,
                        method: "webRequest",
                        rules: o,
                        uuid: s
                    }))
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
            ,
            xhr: e=>{
                let t, n;
                const o = []
                  , s = async e=>{
                    if (e && kt(o, e),
                    n)
                        await n,
                        s();
                    else {
                        const e = At(o);
                        e && e()
                    }
                }
                  , r = No("xhr");
                r ? (r.onMessage.addListener((t=>{
                    "ack"in t ? e.postMessage(t) : s((()=>{
                        const {onpartial: o, data: s, ...r} = t;
                        let i;
                        if (o && s) {
                            const {tfd: t} = s;
                            if (t) {
                                const s = (e=>e && (uo(e) || lo(e) || po(e)) ? (e=>{
                                    let t, n, o;
                                    if (lo(e))
                                        t = e.objUrl.url;
                                    else if (uo(e))
                                        n = e.blob;
                                    else {
                                        if (!po(e))
                                            throw "incompatible TransferableData";
                                        o = e.dataUri
                                    }
                                    return St({
                                        toBlob: ()=>Sn((e=>{
                                            if (n)
                                                e(n);
                                            else if (t)
                                                try {
                                                    Zt(Hn(t), (t=>{
                                                        Zt(Vn(t), (t=>{
                                                            e(t)
                                                        }
                                                        ))
                                                    }
                                                    ))
                                                } catch (t) {
                                                    e(void 0)
                                                }
                                            else {
                                                if (!o)
                                                    throw "incompatible Transferable";
                                                e((e=>{
                                                    let t;
                                                    const n = Xt(e, ",")
                                                      , o = _n(n, 0)
                                                      , s = _n(n, 1);
                                                    t = -1 != tn(o, "base64") ? Ae(s) : $e(s);
                                                    const r = _n(Xt(o, ":"), 1)
                                                      , i = _n(Xt(r, ";"), 0);
                                                    return new fn([t],St({
                                                        type: i
                                                    }))
                                                }
                                                )(o))
                                            }
                                        }
                                        )),
                                        dispose: ()=>{
                                            t && un(t),
                                            t = n = o = void 0
                                        }
                                    })
                                }
                                )(e) : void 0)(t);
                                if (!s)
                                    return;
                                return void (n = Sn((async t=>{
                                    const a = ()=>{
                                        n = null,
                                        t(),
                                        s && s.dispose()
                                    }
                                    ;
                                    try {
                                        const t = await s.toBlob();
                                        if (!t)
                                            return void a();
                                        const n = t.type;
                                        let c;
                                        if (c = "arrayBuffer"in t ? await Yn(t) : await zn(new Kn(t)),
                                        !c)
                                            return void a();
                                        i = St({
                                            nada: St({
                                                buffer: c,
                                                type: n
                                            })
                                        }),
                                        e.postMessage(St({
                                            ...r,
                                            onpartial: o,
                                            data: i
                                        })),
                                        a()
                                    } catch (e) {
                                        Uo.warn(e),
                                        a()
                                    }
                                }
                                )))
                            }
                            i = s
                        } else
                            i = s;
                        e.postMessage(St({
                            ...r,
                            onpartial: o,
                            data: i
                        }))
                    }
                    ))
                }
                )),
                r.onDisconnect.addListener((()=>{
                    s((async()=>{
                        e.disconnect(),
                        t = !0
                    }
                    ))
                }
                )),
                e.onMessage.addListener((e=>{
                    ko(e).then((e=>{
                        t || (e.location = Jn.href,
                        r.postMessage(e))
                    }
                    ))
                }
                )),
                e.onDisconnect.addListener((()=>{
                    r.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
            ,
            onurlchange: e=>{
                const t = No("onurlchange");
                if (!t)
                    return void kn((()=>e.disconnect()), 1);
                let n = ()=>{
                    e.postMessage(St({
                        url: Jn.href
                    }))
                }
                ;
                const o = ()=>{
                    n && (Ln.removeEventListener("hashchange", n),
                    n = null)
                }
                ;
                Ln.addEventListener("hashchange", n),
                t.onMessage.addListener((t=>{
                    e.postMessage(t)
                }
                )),
                t.onDisconnect.addListener((()=>{
                    e.disconnect(),
                    o()
                }
                )),
                e.onMessage.addListener((e=>{
                    t.postMessage(e)
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t.disconnect(),
                    o()
                }
                ))
            }
            ,
            values: e=>{
                const t = No("values");
                t ? (t.onMessage.addListener((t=>{
                    e.postMessage(t)
                }
                )),
                t.onDisconnect.addListener((()=>{
                    e.disconnect()
                }
                )),
                e.onMessage.addListener((e=>{
                    t.postMessage(e)
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
            ,
            backgroundControl: e=>{
                const t = No("backgroundControl");
                t ? (t.onMessage.addListener((t=>{
                    e.postMessage(t)
                }
                )),
                t.onDisconnect.addListener((()=>{
                    e.disconnect()
                }
                )),
                e.onMessage.addListener((e=>{
                    t.postMessage(e)
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
            ,
            keepAlive: e=>{
                const t = No("keepAlive");
                t ? (t.onMessage.addListener((t=>{
                    e.postMessage(t)
                }
                )),
                t.onDisconnect.addListener((()=>{
                    e.disconnect()
                }
                )),
                e.onMessage.addListener((e=>{
                    t.postMessage(e)
                }
                )),
                e.onDisconnect.addListener((()=>{
                    t.disconnect()
                }
                ))) : kn((()=>e.disconnect()), 1)
            }
        })
          , Fo = St({
            setTimeout: ({args: e, cb: t})=>{
                kn(t, e.t)
            }
            ,
            setClipboard: ({args: e, cb: t})=>{
                const {content: n, info: o, uuid: s} = e;
                let r, i;
                "object" == typeof o ? (o.type && (r = o.type),
                o.mimetype && (i = o.mimetype)) : "string" == typeof o && (r = o);
                const a = i || ("html" == r ? "text/html" : "text/plain");
                ho ? So.sendMessage(St({
                    method: "clipboard",
                    mimetype: a,
                    content: n,
                    uuid: s
                }), (()=>t())) : (Mn.document.addEventListener("copy", (e=>{
                    e.stopImmediatePropagation(),
                    e.preventDefault(),
                    e.clipboardData && e.clipboardData.setData(a, n)
                }
                ), St({
                    capture: !0,
                    once: !0
                })),
                Mn.document.execCommand("copy"),
                t())
            }
            ,
            closeTab: ({args: {uuid: e}, cb: t})=>{
                So.sendMessage(St({
                    method: "closeTab",
                    uuid: e,
                    id: To
                }), (e=>{
                    e && e.error && Uo.warn(e.error),
                    t(e)
                }
                ))
            }
            ,
            focusTab: ({args: {uuid: e}, cb: t})=>{
                So.sendMessage(St({
                    method: "focusTab",
                    uuid: e,
                    id: To
                }), (e=>{
                    e && e.error && Uo.warn(e.error),
                    t(e)
                }
                ))
            }
            ,
            addElement: async({args: t, node: n, cb: o})=>{
                try {
                    const s = to(t.tag, St({
                        ...t.properties || St({}),
                        ...t.id ? St({
                            id: t.id
                        }) : St({})
                    }));
                    let r, i;
                    if ("script" === t.tag && (r = co()) && s.setAttribute("nonce", r),
                    n)
                        i = n;
                    else {
                        const t = Mn.document;
                        if (i = t.head || t.body || t.documentElement,
                        !i) {
                            const t = Mn.document;
                            i = await Sn((n=>e((()=>n(t.head || t.body)))))
                        }
                    }
                    i.appendChild(s),
                    r && s.removeAttribute("nonce"),
                    o()
                } catch (e) {
                    Uo.warn("content: error adding script", e)
                }
            }
            ,
            tabs: ({args: e, cb: t})=>{
                e.method = "tabs",
                So.sendMessage(e, (e=>e && t(e.data)))
            }
            ,
            cookie: ({args: e, cb: t})=>{
                e.method = "cookie",
                So.sendMessage(e, (e=>e && t(e.data)))
            }
        })
          , Xo = St({
            init: ()=>{
                To = twod.contextId
            }
            ,
            processMessage: ({method: e, args: t, node: n},o)=>{
                let s;
                if (s = Fo[e])
                    return s(St({
                        args: t,
                        node: n,
                        cb: o
                    }));
                o()
            }
            ,
            processConnect: (e,t)=>{
                let n;
                if (n = Bo[e])
                    return n(t)
            }
        })
          , qo = ["GM_info", "GM.info"]
          , Wo = ["unsafeWindow", ...qo]
          , Ho = e=>e.replace(new RegExp("[\"']","g"), "\\$1");
        let Jo = !1;
        const Go = (e,t,n,o,s)=>{
            const {console: r} = twod;
            Jo = Jo || e.logLevel >= 60;
            const {version: i, injectMode: a, inIncognitoContext: c, isFirstPartyIsolation: d, downloadMode: l, relaxedCsp: u, userAgent: p, container: m, logLevel: g} = e
              , f = St({
                version: i,
                injectMode: a,
                inIncognitoContext: c,
                isFirstPartyIsolation: d,
                downloadMode: l,
                relaxedCsp: u,
                container: m
            });
            Bt(t, (async t=>{
                const {script: i, storage: a} = t
                  , {name: c, uuid: d, options: {run_at: l}} = i
                  , {requires: u, ...m} = i
                  , _ = u.length
                  , v = !i.options.unwrap
                  , h = St({
                    ...f,
                    userAgent: p,
                    logLevel: g,
                    sandboxMode: s
                });
                let w, b;
                const M = ((e,t)=>{
                    const {measure_scripts: n, top_level_await: o, enforce_strict_mode: s} = e
                      , {source_url: r, script: i, code: a} = t
                      , {name: c, grant: d} = i
                      , {requires: l} = i
                      , u = !i.options.unwrap
                      , p = l.map((e=>e.textContent || "")).join("\n");
                    if (u) {
                        let e = "";
                        const t = ["define", "module", "exports"]
                          , l = t.map((()=>"undefined"))
                          , u = -1 !== i.grant.indexOf("none");
                        let m;
                        return m = u ? qo : d.concat(Wo),
                        m.forEach((e=>{
                            const n = e.split(".")[0];
                            "window" !== n && -1 === t.indexOf(n) && (t.push(n),
                            l.push(`p.${n}`))
                        }
                        )),
                        [`with (${u ? "this.s" : "this"}) {`, "(async (u, { p, r, s }) => {", "try {", n ? `console.time("${e = `SCRIPT RUN TIME[${Ho(c)}]`}");\n` : "", "r(u, s, [", l.join(","), "]);", n ? `console.timeEnd("${e}");\n` : "", "} catch (e) {", "if (e.message && e.stack) {", "console.error(\"ERROR: Execution of script '", Ho(c), "' failed! \" + e.message);", "console.log(e.stack);", "} else {", "console.error(e);", "}", "}", "})", "(", (o ? "async " : "") + "function(", t.join(","), ") {", s ? '"use strict";\n' : "\n", p, a, "\n", `}, ${u ? "this" : "seed"})`, "}", "\n", r ? `//# sourceURL=${r}\n` : ""].join("")
                    }
                    return [p, a, "\n", r ? `//# sourceURL=${r}\n` : ""].join("")
                }
                )(e, t);
                return v ? (w = ()=>{
                    Jo && r.debug(`env: inject "${c}" now`);
                    const e = `__f__${On()}`
                      , t = St({
                        storage: a,
                        script: m
                    })
                      , s = `window["${e}"] = function(){${M}}`;
                    let i = !0;
                    o.once(`scriptack-${e}`, (()=>{
                        Jo && !i && r.log(`env: execution of "${c}" was delayed`),
                        n(s, (e=>{
                            e && r.error(`Uncaught SyntaxError: ${e}`)
                        }
                        ))
                    }
                    )),
                    o.send("script", St({
                        id: e,
                        unwrap: !1,
                        bundle: t,
                        flags: h
                    })),
                    i = !1
                }
                ,
                b = "context-menu" == l || "document-start" == l ? void 0 : ()=>{
                    Jo && r.debug(`env: run "${c}" now  (${_} requires)`),
                    o.send("run", St({
                        uuid: d
                    }))
                }
                ) : b = ()=>{
                    Jo && r.debug(`env: inject @unwrap "${c}" now`),
                    n(M, (e=>{
                        e && r.error(`Uncaught SyntaxError: ${e}`)
                    }
                    ))
                }
                ,
                Ko(c, l, w, b, Jo)
            }
            ))
        }
          , Ko = (t,n,o,s,r)=>{
            const {console: i} = twod;
            let a;
            "document-start" == n ? (r && i.debug(`env: run "${t}" ASAP -> document-start`),
            a = e=>e()) : "document-body" == n ? (r && i.debug(`env: schedule "${t}" for document-body`),
            a = no) : "context-menu" == n ? r && i.debug(`env: run "${t}" ASAP -> context-menu`) : "document-end" == n ? (r && i.debug(`env: schedule "${t}" for document-end`),
            a = t=>e(!1, t)) : (r && i.debug(`env: schedule "${t}" for document-idle`),
            a = oo),
            o && o(),
            s && a && a((()=>{
                s()
            }
            ))
        }
          , zo = (e,t)=>{
            let n, o;
            try {
                o = (0,
                eval)(e)
            } catch (e) {
                n = e.message || e
            }
            return t && t(n),
            o
        }
          , {createEvent: Vo} = hn
          , Yo = function(e, t, n, o, s) {
            let r;
            const i = co()
              , a = to("script");
            i && a.setAttribute("nonce", i);
            try {
                a.textContent = t,
                e.appendChild(a)
            } catch (e) {
                r = e.message || e
            }
            if (i && a.removeAttribute("nonce"),
            !s) {
                const e = a.parentNode;
                e && e.removeChild(a)
            }
            return o && o(r),
            !r
        }
          , Zo = (e,t)=>{
            try {
                Yo(Gn.head || Gn.body || Gn.documentElement || Gn, e, 0, t)
            } catch (e) {
                t && t(e.message || e)
            }
        }
        ;
        let Qo = !1;
        const es = location.pathname + location.search
          , ts = "TM_" + Lo.short_id + window.btoa(es.length + es).substr(0, 255).replace(/[#=/]/g, "_")
          , ns = ()=>{
            let e, t, n, o;
            try {
                o = document.cookie.split(";")
            } catch (e) {
                return
            }
            for (e = 0; e < o.length; e++)
                if (t = o[e].substr(0, o[e].indexOf("=")),
                n = o[e].substr(o[e].indexOf("=") + 1),
                t = t.replace(/^\s+|\s+$/g, ""),
                0 === t.indexOf(ts)) {
                    document.cookie = t + "=; expires=Thu, 01 Jan 1970 00:00:01 GMT;";
                    const e = De(n);
                    if (0 !== e.indexOf("blob:"))
                        continue;
                    let o;
                    try {
                        if (0 !== (new URL(e).origin + "/").indexOf(So.getURL("/")))
                            continue;
                        if (o = new XMLHttpRequest,
                        o.open("GET", e, !1),
                        o.send(null),
                        200 === o.status || 0 === o.status)
                            return JSON.parse(o.responseText)
                    } catch (e) {
                        console.warn("content: unable to decode " + (o && o.responseText || "unknown"))
                    }
                }
        }
        ;
        let os = !1;
        const ss = e=>{
            const {bridges: t} = twod
              , {scripts: n, ...o} = e;
            n.js && Go(o, n.js, jo, t.js, "js"),
            n.dom && (Bt(mo, (e=>yn[e] = void 0)),
            Go(o, n.dom, zo, t.dom, "dom")),
            n.raw && Go(o, n.raw, Zo, t.raw, "raw")
        }
        ;
        let rs;
        (async()=>{
            const {unsafeWindow: o, bridges: s} = twod
              , {location: r, document: i} = o
              , a = i instanceof XMLDocument;
            if (!St({
                "http:": !0,
                "https:": !0,
                "file:": !0
            })[o.location.protocol])
                return;
            const c = twod.contextId ? twod.contextId : twod.contextId = On();
            let d;
            const l = St({});
            ft(twod.console, Tn),
            Sn((e=>{
                if (Ro) {
                    const {createBridge: t} = Ao(c);
                    kt($o, ((n,o)=>{
                        rs = d = n;
                        const {modes: r} = o;
                        r.js && (s.js = t(),
                        l.js = ()=>!1,
                        a && (r.raw = !1)),
                        e(o)
                    }
                    ))
                } else
                    Sn((e=>{
                        rs = d = o.pagejs,
                        delete o.pagejs,
                        rs ? e() : (()=>{
                            let t = n=>{
                                delete Mn.pagejs,
                                t = void 0,
                                (t=>{
                                    if (!t)
                                        throw "Error: pagejs missing. Please see http://tmnk.net/faq#Q208 for more information.";
                                    rs = d = t,
                                    e()
                                }
                                )(n)
                            }
                            ;
                            _t(Mn, "pagejs", St({
                                set: t,
                                configurable: !0
                            })),
                            kn((()=>{
                                t && t()
                            }
                            ), 1)
                        }
                        )()
                    }
                    )).then((()=>{
                        e(St({
                            modes: St({
                                js: !1,
                                raw: !0,
                                dom: !0
                            })
                        }))
                    }
                    ))
            }
            )).then((({modes: {dom: i, raw: u}, answer: p})=>{
                var m;
                if (p && (m = p).scripts && m.contexters && (yn.tm_info = p),
                i) {
                    const e = Ro ? zo(`() => ${d};`)() : d
                      , {createBridge: t, inject: n} = ((e,t)=>{
                        const n = (e,t)=>{
                            Bt(s, (n=>n(e, t)))
                        }
                          , o = e=>kt(r, St({
                            listener: e,
                            clone: e=>e
                        }))
                          , s = []
                          , r = []
                          , i = (e,t)=>{
                            Bt(r, (({listener: n, clone: o})=>n(e, o(t))))
                        }
                          , a = e=>kt(s, e)
                          , c = "c" + On();
                        let d;
                        return St({
                            createBridge: ()=>(d = Io(St({
                                sendPrefix: "2S",
                                listenPrefix: "2U",
                                send: i,
                                onMessage: a
                            })),
                            d.init(e),
                            d),
                            inject: ()=>(t(St({
                                unsafeWindow: Mn,
                                unsafeThis: yn,
                                pageWindow: void 0,
                                contextId: c,
                                fSend: n,
                                fOnMessage: o
                            })),
                            d.sendToId(c, "commid", St({
                                id: e
                            })),
                            !0)
                        })
                    }
                    )(c, e);
                    l.dom = n,
                    s.dom = t()
                }
                if (u) {
                    const {createBridge: e, inject: o} = ((e,o)=>{
                        let s;
                        return St({
                            createBridge: ()=>(s = (({sendPrefix: e, listenPrefix: t, cloneInto: o})=>{
                                const s = St({});
                                let r, i, a = 1;
                                const c = St({});
                                let d = !1
                                  , l = [];
                                const u = ()=>{
                                    _ = Mn.document.documentElement,
                                    d = !1;
                                    const e = l;
                                    l = [],
                                    Bt(e, (e=>{
                                        d || h() ? kt(l, e) : e()
                                    }
                                    ))
                                }
                                  , p = e=>{
                                    const t = ++a;
                                    return c[a] = e,
                                    t
                                }
                                  , m = (e,t)=>{
                                    const {m: n, a: s, r, n: i} = t
                                      , a = ((e,t,n)=>{
                                        let s;
                                        var r;
                                        return n ? (s = Vo("MutationEvent"),
                                        zt(s, e, !1, !1, n || null, void 0, void 0, Ct(t), Vt)) : s = new mn(e,St({
                                            detail: (r = t,
                                            o ? o(r, Mn.document) : r)
                                        })),
                                        s
                                    }
                                    )(e, St({
                                        m: n,
                                        a: s,
                                        r
                                    }), i);
                                    Lt(ke, Mn, [a])
                                }
                                  , g = t=>{
                                    const {m: n, r: o, a} = Jt("CustomEvent" == Gt(d = t) ? ln(d) : Pt(cn(d)));
                                    var d;
                                    if (s[n] && (Bt(s[n], (e=>e(a))),
                                    delete s[n]),
                                    "unlock" == n)
                                        m(`${e}_${i}`, St({
                                            m: "unlocked",
                                            a: void 0,
                                            r: null
                                        })),
                                        u();
                                    else if ("unlocked" == n)
                                        u();
                                    else if ("message.response" == n) {
                                        if (null == o)
                                            throw "Invalid Message";
                                        ((e,t)=>{
                                            let n;
                                            e && (n = c[e]) && (n(t),
                                            delete c[e])
                                        }
                                        )(o, a)
                                    } else if (r) {
                                        const s = o ? t=>{
                                            m(`${e}_${i}`, St({
                                                m: "message.response",
                                                a: t,
                                                r: o
                                            }))
                                        }
                                        : ()=>{}
                                        ;
                                        r(St({
                                            method: n,
                                            args: a,
                                            node: "MutationEvent" === Gt(t) ? dn(t) : void 0
                                        }), s)
                                    }
                                }
                                  , f = e=>{
                                    e && (i = e),
                                    i && Ln.addEventListener(`${t}_${i}`, g, !0)
                                }
                                ;
                                let _, v;
                                const h = ()=>{
                                    if ((()=>{
                                        const e = Mn.document.documentElement;
                                        return _ || (_ = e),
                                        _ !== e
                                    }
                                    )()) {
                                        if (v) {
                                            const e = v;
                                            v = void 0,
                                            e(Mn.document)
                                        }
                                        return !0
                                    }
                                }
                                  , w = St({
                                    init: async(t,o)=>{
                                        i ? f() : f(t),
                                        n && !o && await null,
                                        (_ = Mn.document.documentElement,
                                        Sn((e=>{
                                            v = e;
                                            const t = new gn((()=>{
                                                h() && t.disconnect()
                                            }
                                            ));
                                            t.observe(Mn.document, St({
                                                childList: !0
                                            }))
                                        }
                                        ))).then((()=>{
                                            d = !0,
                                            w.refresh(),
                                            m(`${e}_${i}`, St({
                                                m: "unlock",
                                                a: void 0,
                                                r: null
                                            }))
                                        }
                                        ))
                                    }
                                    ,
                                    refresh: ()=>{
                                        const e = i;
                                        e && (w.cleanup(),
                                        w.init(e, !0))
                                    }
                                    ,
                                    switchId: e=>{
                                        i && w.cleanup(),
                                        f(e)
                                    }
                                    ,
                                    send: (t,n,o,s)=>Sn((r=>{
                                        let a, c;
                                        "function" != typeof o && null !== o ? (a = o,
                                        c = s) : c = o,
                                        h();
                                        const u = ()=>{
                                            m(`${e}_${i}`, St({
                                                m: t,
                                                a: n,
                                                r: c ? p(c) : null,
                                                n: a
                                            })),
                                            r()
                                        }
                                        ;
                                        d ? kt(l, u) : u()
                                    }
                                    )),
                                    sendToId: (t,n,o)=>{
                                        m(`${e}_${t}`, St({
                                            m: n,
                                            a: o,
                                            r: null
                                        }))
                                    }
                                    ,
                                    setMessageListener: e=>{
                                        r = e
                                    }
                                    ,
                                    once: (e,t)=>{
                                        s[e] || (s[e] = []),
                                        kt(s[e], t)
                                    }
                                    ,
                                    cleanup: ()=>{
                                        i && (Ln.removeEventListener(`${t}_${i}`, g, !0),
                                        i = void 0)
                                    }
                                });
                                return w
                            }
                            )(St({
                                sendPrefix: "2P",
                                listenPrefix: "2C",
                                cloneInto: Zn
                            })),
                            s),
                            inject: ()=>{
                                s.init(e);
                                let n = !1;
                                const r = On()
                                  , i = "(" + Kt(((e,t)=>{
                                    const n = window
                                      , o = t(n)
                                      , s = n.parent
                                      , {O_dPy: r, cSO: i} = o;
                                    r(s, e, i({
                                        value: o,
                                        enumerable: !1,
                                        writable: !1,
                                        configurable: !0
                                    }))
                                }
                                )) + ')("' + r + '", ' + Kt(t) + ")";
                                return s.once("ack", (()=>{
                                    n = !0
                                }
                                )),
                                (t=>{
                                    ((e,t)=>{
                                        const n = _n(an(Mn.document, "*"), 0) || Mn.document
                                          , o = to("div")
                                          , s = o.attachShadow(St({
                                            mode: "closed"
                                        }));
                                        s.appendChild(to("style", ":host { display: none }"));
                                        const r = to("iframe", St({
                                            sandbox: "allow-scripts allow-same-origin",
                                            style: "display: none",
                                            src: "javascript:void 0"
                                        }));
                                        let i = ()=>{
                                            if (null === i)
                                                return;
                                            i = null;
                                            let n = !1;
                                            try {
                                                const t = r.contentDocument
                                                  , o = r.contentWindow;
                                                t && o && (n = Yo(_n(t.getElementsByTagName("*"), 0), e))
                                            } catch (e) {}
                                            t(o, n),
                                            r.remove(),
                                            o.remove()
                                        }
                                        ;
                                        r.addEventListener("load", i, St({
                                            once: !0,
                                            capture: !0
                                        })),
                                        s.appendChild(r),
                                        n.appendChild(o),
                                        i && i()
                                    }
                                    )(t, ((t,n)=>{
                                        Yo(t, `(${o})({ unsafeWindow: typeof globalThis === "undefined" ? window : globalThis, unsafeThis: window, vault: ${n ? `window["${r}"]` : "null"}, contextId: "${r}", __proto__: null });delete window["${r}"]\n`, 0, (()=>{
                                            s.sendToId(r, "commid", St({
                                                id: e
                                            }))
                                        }
                                        ), !0)
                                    }
                                    ))
                                }
                                )(i),
                                n
                            }
                        })
                    }
                    )(c, d);
                    l.raw = o,
                    s.raw = e()
                }
                s.first = s.js || s.raw || s.dom,
                So.onMessage.addListener(((e,t,n)=>{
                    "executeScript" == e.method ? (e.url && 0 !== tn(r.href, e.url) || void 0 !== e.topframe && e.topframe != Bn || ss(e.info, !1),
                    n(St({}))) : Bn && ("loadUrl" == e.method ? (o.location = e.url,
                    n(St({}))) : "reload" == e.method ? (r.reload(),
                    n(St({}))) : "setForeignAttr" == e.method ? (s.first.send(e.method, e),
                    n(St({}))) : Tn.log("content: unknown method " + Ct(e)))
                }
                )),
                In.onConnect.addListener(((e,t)=>{
                    Xo.processConnect(e, t)
                }
                )),
                Xo.init(),
                Bt(mt(s), (e=>{
                    if ("first" == e)
                        return;
                    const t = s[e];
                    t.setMessageListener(((n,o)=>{
                        const {method: s, args: r} = n;
                        if ("port.message" == s)
                            In.message(r, t);
                        else if ("csp" == s) {
                            let t;
                            t = "raw" == e ? Zo : "dom" == e ? zo : jo,
                            t(r.src, (e=>{
                                e && Tn.error(`Uncaught Error: ${e}`)
                            }
                            ))
                        } else if ("external.message" == s)
                            So.sendMessage(St({
                                method: "externalMessage",
                                request: r
                            }), (e=>{
                                o(e)
                            }
                            ));
                        else if ("console" == s) {
                            const e = r
                              , t = _n(e, 0)
                              , n = _n(e, 1)
                              , o = Tn[t] || Tn.log;
                            o && Lt(o, Tn, ((e,...t)=>{
                                let n = e.length;
                                const o = St(e);
                                for (let e = 0; e < t.length; e++) {
                                    const s = t[e]
                                      , r = bt(s) ? s : [s];
                                    for (let e = 0; e < r.length; e++)
                                        o[n + e] = It(r, e);
                                    n += r.length
                                }
                                return gt(o)
                            }
                            )(["injected:"], (e=>{
                                const t = [];
                                return Bt(e, (e=>{
                                    kt(t, (e=>"string" == typeof e ? Pt(e) : e)(e))
                                }
                                )),
                                t
                            }
                            )(n)))
                        } else
                            Xo.processMessage(n, o)
                    }
                    ))
                }
                )),
                ((t,n,o)=>{
                    const {contextId: s, bridges: r, console: i} = twod;
                    let a;
                    Sn((e=>{
                        const o = t=>{
                            let n = 1;
                            const o = ()=>{
                                Qo && i.log('content: send "prepare" message'),
                                So.sendMessage({
                                    method: "prepare",
                                    id: s,
                                    topframe: Bn,
                                    url: window.location.href
                                }, (s=>{
                                    if (!os) {
                                        if (!s)
                                            return Qo && i.log("content: _early_ execution, connection to bg failed -> retry!"),
                                            window.setTimeout(o, n),
                                            void (n = Et(2 * n, 3e3));
                                        os = !0,
                                        s.nonce && ao(s.nonce),
                                        mt(s.contexters).length || mt(s.scripts).length || s.external_connect ? (t && t(s),
                                        e({
                                            info: s,
                                            type: "complete" == sn(Mn.document) ? "late" : "normal"
                                        })) : e({
                                            info: s
                                        })
                                    }
                                }
                                ))
                            }
                            ;
                            Eo(o)
                        }
                          , r = ()=>{
                            let r;
                            if (Qo && i.log("content: Started (" + s + ", " + window.location.origin + window.location.pathname + ")", yn.tm_info),
                            (r = yn.tm_info) || (r = ns())) {
                                delete yn.tm_info,
                                r.nonce && ao(r.nonce);
                                const {contexters: o, scripts: s, external_connect: i} = r;
                                if (mt(o).length || mt(s).length || i) {
                                    if (r.contexters.raw || r.scripts.raw)
                                        if (t.raw)
                                            a = t.raw();
                                        else if (!n)
                                            throw "raw inject missing";
                                    e({
                                        info: r,
                                        type: "sync"
                                    })
                                } else
                                    e({
                                        info: r
                                    });
                                So.sendMessage({
                                    method: "prepare",
                                    url: window.location.href,
                                    cleanup: !0
                                }, (()=>null))
                            } else
                                n ? o((({scripts: e, contexters: n})=>{
                                    t.raw && (e.raw || n.raw) && (a = t.raw())
                                }
                                )) : (t.raw && (a = t.raw()),
                                o())
                        }
                        ;
                        n ? window.setTimeout((()=>r()), 1) : r()
                    }
                    )).then((({info: a, type: c})=>{
                        const {external_connect: d} = a;
                        if (d && (async()=>{
                            await null,
                            r.first.send("external.connect")
                        }
                        )(),
                        c) {
                            Qo = Qo || a.logLevel >= 60;
                            const {scripts: d} = a;
                            if (d.raw) {
                                let e;
                                n && !t.raw && (e = !0),
                                e && (t.js ? (d.js = (d.js || []).concat(d.raw || []),
                                delete d.raw) : t.dom && (d.dom = (d.dom || []).concat(d.raw || []),
                                delete d.raw))
                            }
                            if (d.js) {
                                if (!t.js)
                                    throw "js inject missing";
                                t.js()
                            }
                            if (d.dom) {
                                if (!t.dom)
                                    throw "dom inject missing";
                                t.dom()
                            }
                            e(!1, (()=>{
                                Qo && i.log("content: DOMContentLoaded"),
                                Bt(mt(r), (e=>r[e].send("DOMContentLoaded")))
                            }
                            )),
                            l = ()=>{
                                Qo && i.log("content: load"),
                                Bt(mt(r), (e=>r[e].send("load")))
                            }
                            ,
                            "complete" == sn(Mn.document) ? l() : Ln.addEventListener("load", (()=>l()), St({
                                capture: !0,
                                once: !0
                            }));
                            const u = (d.dom || []).length + (d.js || []).length + (d.raw || []).length;
                            Qo && i.log("content: " + (c || "normal") + " start event processing for " + s + " (" + u + " to run)"),
                            ss(a, "sync" === c),
                            !Bn && u && window.addEventListener("unload", (()=>{
                                So.sendMessage({
                                    method: "unLoad",
                                    id: s,
                                    topframe: !1,
                                    url: window.location.href
                                }, (()=>null))
                            }
                            ), !1),
                            o()
                        } else
                            o();
                        var l
                    }
                    ))
                }
                )(l, a, (()=>rs = void 0)),
                (async()=>{
                    const {contextId: e} = twod
                      , {location: t, document: n} = Mn;
                    n.addEventListener("mouseenter", (()=>{
                        So.sendMessage(St({
                            method: "contextmenu",
                            url: t.href,
                            id: e
                        }), (()=>{}
                        ))
                    }
                    ), !1)
                }
                )()
            }
            ))
        }
        )()
    }
    )();
}
)({
    __proto__: null,
    unsafeWindow: typeof globalThis === "undefined" ? window : globalThis,
    unsafeThis: window,
}, "tm_eh616a")
